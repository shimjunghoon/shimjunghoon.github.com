{
  "_args": [
    [
      {
        "raw": "voxel-camera",
        "scope": null,
        "escapedName": "voxel-camera",
        "name": "voxel-camera",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/user/Documents/www/voxel-tutorial"
    ]
  ],
  "_from": "voxel-camera@latest",
  "_id": "voxel-camera@0.1.1",
  "_inCache": true,
  "_location": "/voxel-camera",
  "_npmUser": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "_npmVersion": "1.1.66",
  "_phantomChildren": {},
  "_requested": {
    "raw": "voxel-camera",
    "scope": null,
    "escapedName": "voxel-camera",
    "name": "voxel-camera",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/voxel-camera/-/voxel-camera-0.1.1.tgz",
  "_shasum": "d08fcf2b9676e1c2d088d81789cf0b7a651eb810",
  "_shrinkwrap": null,
  "_spec": "voxel-camera",
  "_where": "/Users/user/Documents/www/voxel-tutorial",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "bugs": {
    "url": "https://github.com/shama/voxel-camera/issues"
  },
  "dependencies": {},
  "description": "A camera for voxeljs",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d08fcf2b9676e1c2d088d81789cf0b7a651eb810",
    "tarball": "https://registry.npmjs.org/voxel-camera/-/voxel-camera-0.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/shama/voxel-camera",
  "keywords": [
    "voxel",
    "camera"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shama/voxel-camera/blob/master/LICENSE-MIT"
    }
  ],
  "maintainers": [
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    }
  ],
  "name": "voxel-camera",
  "optionalDependencies": {},
  "readme": "# voxel-camera\n\n> A camera for [voxeljs](http://voxeljs.com).\n\nView [the voxel-drone demo](http://shama.github.com/voxel-drone) as it uses this\ncamera.\n\n## example\n```js\n// voxel-camera returns a method to create a camera controller\nvar createCameraControl = require('voxel-camera');\n\n// Create a camera control, pass a copy of the game\nvar cameraControl = createCameraControl(game);\n\n// Add the camera to the scene\ngame.scene.add(cameraControl.camera());\n\n// Build a monitor (essentially a box to map the video screen to)\nvar monitor = new game.THREE.Mesh(\n  new game.THREE.CubeGeometry(100, 100, 1),\n  new game.THREE.MeshBasicMaterial({\n    map: cameraControl.monitor()\n  })\n);\n\n// Add monitor mesh to the scene\ngame.scene.add(monitor);\n\n// Then render the camera on tick\ngame.on('tick', function(dt) {\n  cameraControl.render();\n\n  // or to have the camera follow a voxeljs item\n  // cameraControl.render(followItem);\n});\n```\n\nIf you need a marker on where the camera is set `marker` to `true`:\n\n```js\nvar createCameraControl = require('voxel-camera');\nvar cameraControl = createCameraControl({game: game, marker: true});\n```\n\nIf you would like to get a PNG stream from the camera:\n\n```js\nvar cameraControl = createCameraControl(game);\ncameraControl.resume();\n\nvar img = document.getElementById('myimg');\ncameraControl.on('data', function(pngData) {\n  img.src = pngData;\n});\n```\n\n_Warning: This uses `canvas.toDataURL('image/png')` which is currently a really\nexpensive operation in the browser. Might want to consider throttling. If anyone\nhas a suggestion on a less expensive way, I'd love to hear it!_\n\n## install\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install voxel-camera\n```\n\n## release history\n* 0.1.1 - convert into a stream and emit pngs :D\n* 0.1.0 - initial release\n\n## license\nCopyright (c) 2013 Kyle Robinson Young<br/>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/voxel-camera.git"
  },
  "version": "0.1.1"
}
